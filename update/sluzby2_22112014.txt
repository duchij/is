REATE TABLE `is_sluzby_2` (
  `item_id` bigint NOT NULL AUTO_INCREMENT PRIMARY KEY,
  `datum` date NOT NULL,
  `typ` enum('OUP','OddA','OddB','OP') COLLATE 'ascii_general_ci' NOT NULL,
  `user_id` bigint NOT NULL
) COMMENT='' ENGINE='InnoDB' COLLATE 'utf8_slovak_ci';


ALTER TABLE `is_sluzby_2`
ADD FOREIGN KEY (`user_id`) REFERENCES `is_users` (`id`)

ALTER TABLE `is_sluzby_2`
ADD UNIQUE `datum_typ` (`datum`, `typ`);

napr. select

select t_sluzb.datum, t_sluzb.user_id, t_sluzb.typ
,group_concat(`typ` SEPARATOR ';') as `type_1`, 
group_concat(`user_id` separator ';') as `user_1`,
group_concat(t_users.full_name separator ';') as meno
FROM `is_sluzby_2` AS `t_sluzb`
left join `is_users` AS `t_users` ON `t_users`.`id` = `t_sluzb`.`user_id`
group by `datum`
order by t_sluzb.datum
limit 30

CREATE TABLE `is_sluzby_2` ( `item_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT, `datum` date NOT NULL, `typ` enum('OUP','OddA','OddB','OP','Prijm') CHARACTER SET ascii NOT NULL, `user_id` bigint(20) NOT NULL DEFAULT '-1', `date_group` int(6) unsigned zerofill NOT NULL, `comment` text COLLATE utf8_slovak_ci, PRIMARY KEY (`item_id`), UNIQUE KEY `datum_typ` (`datum`,`typ`), KEY `user_id` (`user_id`) ) ENGINE=InnoDB AUTO_INCREMENT=306 DEFAULT CHARSET=utf8 COLLATE=utf8_slovak_ci

begin

if length(NEW.comment) = 0 THEN
 set NEW.comment = NULL;
end if;

set @mesiac = MONTH(NEW.datum);
set @rok=YEAR(NEW.datum);

if (@mesiac >=1 AND @mesiac <=9) THEN
    set @dateGroup = concat(@rok,'0',@mesiac);
    set NEW.date_group = @dateGroup;
END IF;

if (@mesiac >=10) THEN
    set @dateGroup = concat(@rok,@mesiac);
    set NEW.date_group = @dateGroup;
end if;



end


SELECT SQL_NO_CACHE t_sluzb.datum, 
GROUP_CONCAT(typ order by ordering ASC SEPARATOR ';') AS pokus,
GROUP_CONCAT(user_id order by ordering ASC SEPARATOR ';') AS users_ids,
GROUP_CONCAT(IF(user_id=0,'-',t_users.full_name) order by ordering ASC SEPARATOR ';') AS users_names,
t_sluzb.date_group AS dategroup
FROM is_sluzby_2 AS t_sluzb
LEFT JOIN is_users AS t_users ON t_users.id = t_sluzb.user_id
WHERE t_sluzb.date_group = '201411'
GROUP BY t_sluzb.datum
ORDER BY t_sluzb.datum

-----

SELECT SQL_NO_CACHE t_sluzb.datum, 

GROUP_CONCAT(typ order by ordering ASC SEPARATOR ';') AS pokus,

GROUP_CONCAT(user_id order by ordering ASC SEPARATOR ';') AS users_ids,

GROUP_CONCAT(IF(user_id=0,'-',t_users.full_name) order by ordering ASC SEPARATOR ';') AS users_names,

GROUP_CONCAT(IF(t_sluzb.comment=NULL,'-',t_sluzb.comment) order by ordering ASC SEPARATOR '|') AS comment,

t_sluzb.date_group AS dategroup

FROM is_sluzby_2 AS t_sluzb
LEFT JOIN is_users AS t_users ON t_users.id = t_sluzb.user_id
WHERE t_sluzb.date_group = '201411'
GROUP BY t_sluzb.datum
ORDER BY t_sluzb.datum

----

CREATE DEFINER=`root`@`localhost` PROCEDURE `FILL_DOC_SHIFTS`(IN `dategroup` int, IN `days` int, IN `mesiac` int, IN `rok` int, OUT `res` int)
BEGIN

declare flag int default 1;

	DECLARE exit handler for sqlexception
	BEGIN
		set flag = 0;
        set res = -1;
		ROLLBACK;
		-- exit procedure;
	END;

	DECLARE exit handler for sqlwarning
	BEGIN
		set flag = 0;
        set res = -1;
		ROLLBACK;
		-- exit procedure;
	END;

	
	SET res = 0;
    START TRANSACTION;
	mojLoop:LOOP
		SET res = res + 1;
		IF (res <= days AND flag=1) THEN

			INSERT INTO is_sluzby_2 (datum, typ,user_id,date_group,ordering,comment,state) VALUES 
			(concat(rok,'-',mesiac,'-',res),'OUP','0',dategroup,'1','-','draft'),
			(concat(rok,'-',mesiac,'-',res),'OddA','0',dategroup,'2','-','draft'),
			(concat(rok,'-',mesiac,'-',res),'OddB','0',dategroup,'3','-','draft'),
			(concat(rok,'-',mesiac,'-',res),'OP','0',dategroup,'4','-','draft'),
			(concat(rok,'-',mesiac,'-',res),'Prijm','0',dategroup,'5','-','draft');

			ITERATE mojLoop;
		END IF;
	LEAVE mojLoop;
	END LOOP mojLoop;
    COMMIT;
END


-------


CREATE DEFINER=`root`@`localhost` PROCEDURE `SPLIT_FULLNAME`()
BEGIN
declare fname text;
declare tId int;
declare done int default 0;

DECLARE cur1 CURSOR FOR SELECT id, full_name FROM is_users;

DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;
open cur1;

WHILE done=0 DO
	fetch cur1 into tId,fname;
	set @pos = locate(" ",fname,1);
-- set @name1 = mid(fname,0,@pos);
	set @surname = mid(fname,@pos,length(fname));
-- SELECT @surname;
	UPDATE is_users  SET name3 = @surname WHERE id = tId;
END WHILE;
close cur1;
end

...... 25.12.2014



CREATE DEFINER=`root`@`localhost` TRIGGER `is_sluzby_2_au` AFTER UPDATE ON `is_sluzby_2` FOR EACH ROW
begin
	set @old_userId = OLD.user_id;
	set @new_userId = NEW.user_id;
	set @mesiac = month(OLD.datum);
	set @rok = year(OLD.datum);
	
   
	DELETE FROM is_vykaz WHERE rok = @rok AND mesiac = @mesiac AND user_id = @old_userId;
	DELETE FROM is_vykaz WHERE rok = @rok AND mesiac = @mesiac AND user_id = @new_userId;
END


ALTER TABLE `is_vykaz`
CHANGE `vykaz` `vykaz` longtext COLLATE 'ascii_general_ci' NOT NULL AFTER `rok`,
CHANGE `prenos` `prenos` text COLLATE 'ascii_general_ci' NULL AFTER `vykaz`,
COMMENT='';

ALTER TABLE `is_vykaz`
COMMENT='' ENGINE='InnoDB' COLLATE 'utf8_slovak_ci';

ALTER TABLE `is_vykaz`
ADD INDEX `mesiac` (`mesiac`),
ADD INDEX `rok` (`rok`),
ADD INDEX `user_id` (`user_id`),
ADD UNIQUE `user_id_mesiac_rok` (`user_id`, `mesiac`, `rok`);

ALTER TABLE `is_vykaz`
ADD FOREIGN KEY (`user_id`) REFERENCES `is_users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE